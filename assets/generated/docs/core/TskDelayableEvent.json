{
  "title": "TskDelayableEvent",
  "description": "used to delay the action of an event, or cancel it asynchronously\n",
  "sections": [
    {
      "title": "Decorator(s)",
      "componentSelector": "markdown",
      "data": "```typescript\n\n```",
      "display": false
    },
    {
      "title": "Properties",
      "componentSelector": "table",
      "data": {
        "columns": [
          {
            "componentSelector": "markdown",
            "header": "Name",
            "id": "name",
            "property": "name"
          },
          {
            "header": "Description",
            "id": "description",
            "property": "description"
          }
        ],
        "rows": [
          {
            "name": "delays: Observable<never>",
            "description": "observable that emits after all delays emit"
          }
        ]
      }
    },
    {
      "title": "Method",
      "componentSelector": "table",
      "data": {
        "columns": [
          {
            "componentSelector": "markdown",
            "header": "Name",
            "id": "name",
            "property": "name"
          },
          {
            "header": "Description",
            "id": "description",
            "property": "description"
          }
        ],
        "rows": [
          {
            "name": "addDelay: void",
            "description": "add a delay to the event"
          }
        ]
      }
    },
    {
      "title": "Description"
    },
    {
      "componentSelector": "markdown",
      "data": "To delay the event use `addDelay` in the method listening for the event and subscribe to\n`delays` prior to proceeding on the emitting end.\n\nTo cancel the event asynchronously, add delays as stated above and cancel the event prior to the\ndelays ending."
    },
    {
      "title": "Example(s)"
    },
    {
      "componentSelector": "examples/core/delayable-event"
    }
  ],
  "docType": "class"
}
